/**
                                                        libwww Copyright Notice
   [This notice should be placed within redistributed or derivative software
   code when appropriate. This particular formulation of W3C's notice for
   inclusion in libwww code became active on August 14 1998.]

                            LIBWWW COPYRIGHT NOTICE

   libwww: W3C's implementation of HTTP can be found at:
   http://www.w3.org/Library/

                         Copyright ¨ 1995-2002 World Wide Web Consortium,
                         (Massachusetts Institute of Technology, Institut
                         National de Recherche en Informatique et en
                         Automatique, Keio University). All Rights Reserved.
                         This program is distributed under the W3C's
                         Intellectual Property License. This program is
                         distributed in the hope that it will be useful, but
                         WITHOUT ANY WARRANTY; without even the implied
                         warranty of MERCHANTABILITY or FITNESS FOR A
                         PARTICULAR PURPOSE. See W3C License
                         http://www.w3.org/Consortium/Legal/ for more details.

                         Copyright ¨ 1995 CERN. "This product includes computer
                         software created and made available by CERN. This
                         acknowledgment shall be mentioned in full in any
                         product which includes the CERN computer software
                         included herein or parts thereof."

 ****************************************************************************/

#include "nel/gui/libwww_types.h"

namespace NLGUI
{

/*
 **	ATTRIBUTE DEFINITION MACROS (see HTMLPDTD.h)
 */

/*
 * redefine the macros, so that the "stringized" attribute name
 * is generated
 */

#undef	HTML_ATTR
#define	HTML_ATTR(t,a)		{ (char *) #a }
#undef	HTML_ATTRIBUTES
#define	HTML_ATTRIBUTES(t)	{ 0 }

/*
 **	ATTRIBUTE LISTS
 */

static HTAttr no_attr[1] = {
	{ 0 }
};

static HTAttr body_attr[HTML_BODY_ATTRIBUTES+1] = {	/* to catch images */
	HTML_ATTR(BODY,ALINK),
	HTML_ATTR(BODY,BACKGROUND),
	HTML_ATTR(BODY,BGCOLOR),
	HTML_ATTR(BODY,CLASS),
	HTML_ATTR(BODY,DIR),
	HTML_ATTR(BODY,ID),
	HTML_ATTR(BODY,LANG),
	HTML_ATTR(BODY,LINK),
	HTML_ATTR(BODY,STYLE),
	HTML_ATTR(BODY,TEXT),
	HTML_ATTR(BODY,TITLE),
	HTML_ATTR(BODY,VLINK),
	HTML_ATTRIBUTES(BODY)
};

static HTAttr frame_attr[HTML_FRAME_ATTRIBUTES+1] = {	/* frame attributes */
	HTML_ATTR(FRAME,CLASS),
	HTML_ATTR(FRAME,FRAMEBORDER),
	HTML_ATTR(FRAME,ID),
	HTML_ATTR(FRAME,NAME),
	HTML_ATTR(FRAME,MARGINHEIGHT),
	HTML_ATTR(FRAME,MARGINWIDTH),
	HTML_ATTR(FRAME,NORESIZE),
	HTML_ATTR(FRAME,LONGDESC),
	HTML_ATTR(FRAME,SCROLLING),
	HTML_ATTR(FRAME,SRC),
	HTML_ATTR(FRAME,STYLE),
	HTML_ATTR(FRAME,TARGET),
	HTML_ATTR(FRAME,TITLE),
	HTML_ATTRIBUTES(FRAME)
};

static HTAttr frameset_attr[HTML_FRAMESET_ATTRIBUTES+1] = { /* frameset attributes */
	HTML_ATTR(FRAMESET,CLASS),
	HTML_ATTR(FRAMESET,COLS),
	HTML_ATTR(FRAMESET,ID),
	HTML_ATTR(FRAMESET,ROWS),
	HTML_ATTR(FRAMESET,STYLE),
	HTML_ATTR(FRAMESET,TITLE),
	HTML_ATTRIBUTES(FRAMESET)
};

static HTAttr a_attr[HTML_A_ATTRIBUTES+1] = {		/* Anchor attributes */
	HTML_ATTR(A,ACCESSKEY),
	HTML_ATTR(A,CHARSET),
	HTML_ATTR(A,CLASS),
	HTML_ATTR(A,COORDS),
	HTML_ATTR(A,DIR),
	HTML_ATTR(A,HREF),
	HTML_ATTR(A,HREFLANG),
	HTML_ATTR(A,ID),
	HTML_ATTR(A,NAME),
	HTML_ATTR(A,REL),
	HTML_ATTR(A,REV),
	HTML_ATTR(A,SHAPE),
	HTML_ATTR(A,STYLE),
	HTML_ATTR(A,TABINDEX),
	HTML_ATTR(A,TARGET),
	HTML_ATTR(A,TYPE),
	HTML_ATTR(A,TITLE),
	HTML_ATTRIBUTES(A)
};

static HTAttr applet_attr[HTML_APPLET_ATTRIBUTES+1] = {
	HTML_ATTR(APPLET,ALIGN),
	HTML_ATTR(APPLET,ALT),
	HTML_ATTR(APPLET,ARCHIVE),
	HTML_ATTR(APPLET,CLASS),
	HTML_ATTR(APPLET,CODE),
	HTML_ATTR(APPLET,CODEBASE),
	HTML_ATTR(APPLET,HEIGHT),
	HTML_ATTR(APPLET,HSPACE),
	HTML_ATTR(APPLET,ID),
	HTML_ATTR(APPLET,NAME),
	HTML_ATTR(APPLET,OBJECT),
	HTML_ATTR(APPLET,STYLE),
	HTML_ATTR(APPLET,TITLE),
	HTML_ATTR(APPLET,VSPACE),
	HTML_ATTR(APPLET,WIDTH),
	HTML_ATTRIBUTES(APPLET)
};

static HTAttr area_attr[HTML_AREA_ATTRIBUTES+1] = {		/* Area attributes */
	HTML_ATTR(AREA,ACCESSKEY),
	HTML_ATTR(AREA,ALT),
	HTML_ATTR(AREA,CLASS),
	HTML_ATTR(AREA,COORDS),
	HTML_ATTR(AREA,DIR),
	HTML_ATTR(AREA,HREF),
	HTML_ATTR(AREA,ID),
	HTML_ATTR(AREA,NAME),
	HTML_ATTR(AREA,NOHREF),
	HTML_ATTR(AREA,LANG),
	HTML_ATTR(AREA,SHAPE),
	HTML_ATTR(AREA,STYLE),
	HTML_ATTR(AREA,TABINDEX),
	HTML_ATTR(AREA,TARGET),
	HTML_ATTR(AREA,TITLE),
	HTML_ATTRIBUTES(AREA)
};

static HTAttr base_attr[HTML_BASE_ATTRIBUTES+1] = {	/* BASE attributes */
	HTML_ATTR(BASE,HREF),
	HTML_ATTR(BASE,TARGET),
	HTML_ATTRIBUTES(BASE)
};

static HTAttr bdo_attr[HTML_BDO_ATTRIBUTES+1] = {
	HTML_ATTR(BDO,CLASS),
	HTML_ATTR(BDO,DIR),
	HTML_ATTR(BDO,ID),
	HTML_ATTR(BDO,LANG),
	HTML_ATTR(BDO,STYLE),
	HTML_ATTR(BDO,TITLE),
	HTML_ATTRIBUTES(BDO)
};

static HTAttr bq_attr[HTML_BQ_ATTRIBUTES+1] = {
	HTML_ATTR(BQ,CITE),
	HTML_ATTR(BQ,CLASS),
	HTML_ATTR(BQ,DIR),
	HTML_ATTR(BQ,ID),
	HTML_ATTR(BQ,LANG),
	HTML_ATTR(BQ,STYLE),
	HTML_ATTR(BQ,TITLE),
	HTML_ATTRIBUTES(BQ)
};

static HTAttr br_attr[HTML_BR_ATTRIBUTES+1] = {
	HTML_ATTR(BR,CLASS),
	HTML_ATTR(BR,CLEAR),
	HTML_ATTR(BR,ID),
	HTML_ATTR(BR,STYLE),
	HTML_ATTR(BR,TITLE),
	HTML_ATTRIBUTES(BR)
};

static HTAttr button_attr[HTML_BUTTON_ATTRIBUTES+1] = {
	HTML_ATTR(BUTTON,ACCESSKEY),
	HTML_ATTR(BUTTON,CLASS),
	HTML_ATTR(BUTTON,DIR),
	HTML_ATTR(BUTTON,DISABLED),
	HTML_ATTR(BUTTON,ID),
	HTML_ATTR(BUTTON,LANG),
	HTML_ATTR(BUTTON,NAME),
	HTML_ATTR(BUTTON,STYLE),
	HTML_ATTR(BUTTON,TABINDEX),
	HTML_ATTR(BUTTON,TITLE),
	HTML_ATTR(BUTTON,TYPE),
	HTML_ATTR(BUTTON,VALUE),
	HTML_ATTRIBUTES(BUTTON),
};

static HTAttr col_attr[HTML_COL_ATTRIBUTES+1] = {
	HTML_ATTR(COL,CLASS),
	HTML_ATTR(COL,DIR),
	HTML_ATTR(COL,ID),
	HTML_ATTR(COL,LANG),
	HTML_ATTR(COL,SPAN),
	HTML_ATTR(COL,STYLE),
	HTML_ATTR(COL,TITLE),
	HTML_ATTR(COL,WIDTH),
	HTML_ATTRIBUTES(COL)
};

static HTAttr changes_attr[HTML_CHANGES_ATTRIBUTES+1] = {
	HTML_ATTR(CHANGES,CITE),
	HTML_ATTR(CHANGES,CLASS),
	HTML_ATTR(CHANGES,DATETIME),
	HTML_ATTR(CHANGES,DIR),
	HTML_ATTR(CHANGES,ID),
	HTML_ATTR(CHANGES,LANG),
	HTML_ATTR(CHANGES,STYLE),
	HTML_ATTR(CHANGES,TITLE),
	HTML_ATTRIBUTES(CHANGES)
};

static HTAttr font_attr[HTML_FONT_ATTRIBUTES+1] = {
	HTML_ATTR(FONT,CLASS),
	HTML_ATTR(FONT,COLOR),
	HTML_ATTR(FONT,DIR),
	HTML_ATTR(FONT,FACE),
	HTML_ATTR(FONT,ID),
	HTML_ATTR(FONT,LANG),
	HTML_ATTR(FONT,SIZE),
	HTML_ATTR(FONT,STYLE),
	HTML_ATTR(FONT,TITLE),
	HTML_ATTRIBUTES(FONT)
};

static HTAttr form_attr[HTML_FORM_ATTRIBUTES+1] = {
	HTML_ATTR(FORM,ACCEPT),
	{ (char *) "ACCEPT-CHARSET" }, /* HTML_ATTR(FORM,ACCEPT_CHARSET) */
	HTML_ATTR(FORM,ACTION),
	HTML_ATTR(FORM,CLASS),
	HTML_ATTR(FORM,DIR),
	HTML_ATTR(FORM,ENCTYPE),
	HTML_ATTR(FORM,ID),
	HTML_ATTR(FORM,LANG),
	HTML_ATTR(FORM,METHOD),
	HTML_ATTR(FORM,STYLE),
	HTML_ATTR(FORM,TARGET),
	HTML_ATTR(FORM,TITLE),
	HTML_ATTRIBUTES(FORM)
};

static HTAttr gen_attr[HTML_GEN_ATTRIBUTES+1] = { /* General, for many things */
	HTML_ATTR(GEN,CLASS),
	HTML_ATTR(GEN,DIR),
	HTML_ATTR(GEN,ID),
	HTML_ATTR(GEN,LANG),
	HTML_ATTR(GEN,STYLE),
	HTML_ATTR(GEN,TITLE),
	HTML_ATTRIBUTES(GEN)
};

static HTAttr block_attr[HTML_BLOCK_ATTRIBUTES+1] = { /* DIV, SPAN, H1-H6 */
	HTML_ATTR(BLOCK,ALIGN),
	HTML_ATTR(BLOCK,CLASS),
	HTML_ATTR(BLOCK,DIR),
	HTML_ATTR(BLOCK,ID),
	HTML_ATTR(BLOCK,LANG),
	HTML_ATTR(BLOCK,STYLE),
	HTML_ATTR(BLOCK,TITLE),
	HTML_ATTRIBUTES(BLOCK)
};

static HTAttr head_attr[HTML_HEAD_ATTRIBUTES+1] = {
	HTML_ATTR(HEAD,DIR),
	HTML_ATTR(HEAD,LANG),
	HTML_ATTR(HEAD,PROFILE),
	HTML_ATTRIBUTES(HEAD)
};

static HTAttr hr_attr[HTML_HR_ATTRIBUTES+1] = {
	HTML_ATTR(HR,ALIGN),
	HTML_ATTR(HR,CLASS),
	HTML_ATTR(HR,DIR),
	HTML_ATTR(HR,ID),
	HTML_ATTR(HR,LANG),
	HTML_ATTR(HR,NOSHADE),
	HTML_ATTR(HR,SIZE),
	HTML_ATTR(HR,STYLE),
	HTML_ATTR(HR,TITLE),
	HTML_ATTR(HR,WIDTH),
	HTML_ATTRIBUTES(HR)
};

static HTAttr html_attr[HTML_HTML_ATTRIBUTES+1] = {
	HTML_ATTR(HTML,DIR),
	HTML_ATTR(HTML,LANG),
	HTML_ATTR(HTML,VERSION),
	HTML_ATTRIBUTES(HTML)
};

static HTAttr iframe_attr[HTML_IFRAME_ATTRIBUTES+1] = {
	HTML_ATTR(IFRAME,ALIGN),
	HTML_ATTR(IFRAME,CLASS),
	HTML_ATTR(IFRAME,FRAMEBORDER),
	HTML_ATTR(IFRAME,HEIGHT),
	HTML_ATTR(IFRAME,ID),
	HTML_ATTR(IFRAME,LONGDESC),
	HTML_ATTR(IFRAME,MARGINHEIGHT),
	HTML_ATTR(IFRAME,MARGINWIDTH),
	HTML_ATTR(IFRAME,NAME),
	HTML_ATTR(IFRAME,SCROLLING),
	HTML_ATTR(IFRAME,SRC),
	HTML_ATTR(IFRAME,STYLE),
	HTML_ATTR(IFRAME,TARGET),
	HTML_ATTR(IFRAME,TITLE),
	HTML_ATTR(IFRAME,WIDTH),
	HTML_ATTRIBUTES(IFRAME)
};

static HTAttr img_attr[HTML_IMG_ATTRIBUTES+1] = {	/* IMG attributes */
	HTML_ATTR(IMG,ALIGN),
	HTML_ATTR(IMG,ALT),
	HTML_ATTR(IMG,BORDER),
	HTML_ATTR(IMG,CLASS),
	HTML_ATTR(IMG,DIR),
	HTML_ATTR(IMG,HEIGHT),
	HTML_ATTR(IMG,HSPACE),
	HTML_ATTR(IMG,ID),
	HTML_ATTR(IMG,ISMAP),
	HTML_ATTR(IMG,LANG),
	HTML_ATTR(IMG,LONGDESC),
	HTML_ATTR(IMG,SRC),
	HTML_ATTR(IMG,STYLE),
	HTML_ATTR(IMG,TITLE),
	HTML_ATTR(IMG,USEMAP),
	HTML_ATTR(IMG,VSPACE),
	HTML_ATTR(IMG,WIDTH),
	HTML_ATTRIBUTES(IMG)
};

static HTAttr input_attr[HTML_INPUT_ATTRIBUTES+1] = {
	HTML_ATTR(INPUT,ACCEPT),
	HTML_ATTR(INPUT,ACCESSKEY),
	HTML_ATTR(INPUT,ALIGN),
	HTML_ATTR(INPUT,ALT),
	HTML_ATTR(INPUT,CHECKED),
	HTML_ATTR(INPUT,CLASS),
	HTML_ATTR(INPUT,DIR),
	HTML_ATTR(INPUT,DISABLED),
	HTML_ATTR(INPUT,ID),
	HTML_ATTR(INPUT,LANG),
	HTML_ATTR(INPUT,MAXLENGTH),
	HTML_ATTR(INPUT,NAME),
	HTML_ATTR(INPUT,READONLY),
	HTML_ATTR(INPUT,SIZE),
	HTML_ATTR(INPUT,SRC),
	HTML_ATTR(INPUT,STYLE),
	HTML_ATTR(INPUT,TABINDEX),
	HTML_ATTR(INPUT,TITLE),
	HTML_ATTR(INPUT,TYPE),
	HTML_ATTR(INPUT,USEMAP),
	HTML_ATTR(INPUT,VALUE),
	HTML_ATTRIBUTES(INPUT)
};

static HTAttr isindex_attr[HTML_ISINDEX_ATTRIBUTES+1] = {
	HTML_ATTR(ISINDEX,CLASS),
	HTML_ATTR(ISINDEX,DIR),
	HTML_ATTR(ISINDEX,ID),
	HTML_ATTR(ISINDEX,LANG),
	HTML_ATTR(ISINDEX,PROMPT),
	HTML_ATTR(ISINDEX,STYLE),
	HTML_ATTR(ISINDEX,TITLE),
	HTML_ATTRIBUTES(ISINDEX)
};

static HTAttr label_attr[HTML_LABEL_ATTRIBUTES+1] = {
	HTML_ATTR(LABEL,ACCESSKEY),
	HTML_ATTR(LABEL,CLASS),
	HTML_ATTR(LABEL,DIR),
	HTML_ATTR(LABEL,FOR),
	HTML_ATTR(LABEL,ID),
	HTML_ATTR(LABEL,LANG),
	HTML_ATTR(LABEL,STYLE),
	HTML_ATTR(LABEL,TITLE),
	HTML_ATTRIBUTES(LABEL)
};

static HTAttr legend_attr[HTML_LEGEND_ATTRIBUTES+1] = {
	HTML_ATTR(LEGEND,ACCESSKEY),
	HTML_ATTR(LEGEND,ALIGN),
	HTML_ATTR(LEGEND,CLASS),
	HTML_ATTR(LEGEND,DIR),
	HTML_ATTR(LEGEND,ID),
	HTML_ATTR(LEGEND,LANG),
	HTML_ATTR(LEGEND,STYLE),
	HTML_ATTR(LEGEND,TITLE),
	HTML_ATTRIBUTES(LEGEND)
};

static HTAttr li_attr[HTML_LI_ATTRIBUTES+1] = {
	HTML_ATTR(LI,CLASS),
	HTML_ATTR(LI,COMPACT),
	HTML_ATTR(LI,DIR),
	HTML_ATTR(LI,ID),
	HTML_ATTR(LI,LANG),
	HTML_ATTR(LI,STYLE),
	HTML_ATTR(LI,TITLE),
	HTML_ATTR(LI,TYPE),
	HTML_ATTR(LI,VALUE),
	HTML_ATTRIBUTES(LI)
};

static HTAttr link_attr[HTML_LINK_ATTRIBUTES+1] = {	/* link attributes */
	HTML_ATTR(LINK,CHARSET),
	HTML_ATTR(LINK,CLASS),
	HTML_ATTR(LINK,DIR),
	HTML_ATTR(LINK,HREF),
	HTML_ATTR(LINK,HREFLANG),
	HTML_ATTR(LINK,ID),
	HTML_ATTR(LINK,LANG),
	HTML_ATTR(LINK,MEDIA),
	HTML_ATTR(LINK,REL),
	HTML_ATTR(LINK,REV),
	HTML_ATTR(LINK,STYLE),
	HTML_ATTR(LINK,TARGET),
	HTML_ATTR(LINK,TITLE),
	HTML_ATTR(LINK,TYPE),
	HTML_ATTRIBUTES(LINK)
};

static HTAttr map_attr[HTML_MAP_ATTRIBUTES+1] = {
	HTML_ATTR(MAP,CLASS),
	HTML_ATTR(MAP,DIR),
	HTML_ATTR(MAP,ID),
	HTML_ATTR(MAP,LANG),
	HTML_ATTR(MAP,NAME),
	HTML_ATTR(MAP,STYLE),
	HTML_ATTR(MAP,TITLE),
	HTML_ATTRIBUTES(MAP)
};

static HTAttr meta_attr[HTML_META_ATTRIBUTES+1] = {
	HTML_ATTR(META,CONTENT),
	HTML_ATTR(META,DIR),
	{ (char *)"HTTP-EQUIV" },   /* HTML_ATTR(META,HTTP_EQUIV) */
	HTML_ATTR(META,LANG),
	HTML_ATTR(META,NAME),
	HTML_ATTR(META,SCHEME),
	HTML_ATTRIBUTES(META)
};

static HTAttr nextid_attr[HTML_NEXTID_ATTRIBUTES+1] = {
	{ (char *)"N" },
	{ 0 }	/* Terminate list */
};

static HTAttr object_attr[HTML_OBJECT_ATTRIBUTES+1] = {	/* object attributes */
	HTML_ATTR(OBJECT,ALIGN),
	HTML_ATTR(OBJECT,ARCHIVE),
	HTML_ATTR(OBJECT,BORDER),
	HTML_ATTR(OBJECT,CLASS),
	HTML_ATTR(OBJECT,CLASSID),
	HTML_ATTR(OBJECT,CODEBASE),
	HTML_ATTR(OBJECT,CODETYPE),
	HTML_ATTR(OBJECT,DATA),
	HTML_ATTR(OBJECT,DECLARE),
	HTML_ATTR(OBJECT,DIR),
	HTML_ATTR(OBJECT,HEIGHT),
	HTML_ATTR(OBJECT,HSPACE),
	HTML_ATTR(OBJECT,ID),
	HTML_ATTR(OBJECT,LANG),
	HTML_ATTR(OBJECT,NAME),
	HTML_ATTR(OBJECT,STANDBY),
	HTML_ATTR(OBJECT,STYLE),
	HTML_ATTR(OBJECT,TABINDEX),
	HTML_ATTR(OBJECT,TITLE),
	HTML_ATTR(OBJECT,TYPE),
	HTML_ATTR(OBJECT,USEMAP),
	HTML_ATTR(OBJECT,VSPACE),
	HTML_ATTR(OBJECT,WIDTH),
	HTML_ATTRIBUTES(OBJECT)
};

static HTAttr ol_attr[HTML_OL_ATTRIBUTES+1] = {
	HTML_ATTR(OL,CLASS),
	HTML_ATTR(OL,COMPACT),
	HTML_ATTR(OL,DIR),
	HTML_ATTR(OL,ID),
	HTML_ATTR(OL,LANG),
	HTML_ATTR(OL,START),
	HTML_ATTR(OL,STYLE),
	HTML_ATTR(OL,TITLE),
	HTML_ATTR(OL,TYPE),
	HTML_ATTRIBUTES(OL)
};

static HTAttr optgroup_attr[HTML_OPTGROUP_ATTRIBUTES+1] = {
	HTML_ATTR(OPTGROUP,CLASS),
	HTML_ATTR(OPTGROUP,DISABLED),
	HTML_ATTR(OPTGROUP,DIR),
	HTML_ATTR(OPTGROUP,ID),
	HTML_ATTR(OPTGROUP,LABEL),
	HTML_ATTR(OPTGROUP,LANG),
	HTML_ATTR(OPTGROUP,STYLE),
	HTML_ATTR(OPTGROUP,TITLE),
	HTML_ATTRIBUTES(OPTGROUP)
};

static HTAttr option_attr[HTML_OPTION_ATTRIBUTES+1] = {
	HTML_ATTR(OPTION,CLASS),
	HTML_ATTR(OPTION,DISABLED),
	HTML_ATTR(OPTION,DIR),
	HTML_ATTR(OPTION,ID),
	HTML_ATTR(OPTION,LABEL),
	HTML_ATTR(OPTION,LANG),
	HTML_ATTR(OPTION,SELECTED),
	HTML_ATTR(OPTION,STYLE),
	HTML_ATTR(OPTION,TITLE),
	HTML_ATTR(OPTION,VALUE),
	HTML_ATTRIBUTES(OPTION)
};

static HTAttr param_attr[HTML_PARAM_ATTRIBUTES+1] = {
	HTML_ATTR(PARAM,ID),
	HTML_ATTR(PARAM,NAME),
	HTML_ATTR(PARAM,TYPE),
	HTML_ATTR(PARAM,VALUE),
	HTML_ATTR(PARAM,VALUETYPE),
	HTML_ATTRIBUTES(PARAM)
};

static HTAttr pre_attr[HTML_PRE_ATTRIBUTES+1] = {
	HTML_ATTR(PRE,CLASS),
	HTML_ATTR(PRE,DIR),
	HTML_ATTR(PRE,ID),
	HTML_ATTR(PRE,LANG),
	HTML_ATTR(PRE,STYLE),
	HTML_ATTR(PRE,TITLE),
	HTML_ATTR(PRE,WIDTH),
	HTML_ATTRIBUTES(PRE)
};

static HTAttr script_attr[HTML_SCRIPT_ATTRIBUTES+1] = {
	HTML_ATTR(SCRIPT,CHARSET),
	HTML_ATTR(SCRIPT,DEFER),
	HTML_ATTR(SCRIPT,LANGUAGE),
	HTML_ATTR(SCRIPT,SRC),
	HTML_ATTR(SCRIPT,TYPE),
	HTML_ATTRIBUTES(SCRIPT)
};

static HTAttr select_attr[HTML_SELECT_ATTRIBUTES+1] = {
	HTML_ATTR(SELECT,CLASS),
	HTML_ATTR(SELECT,DIR),
	HTML_ATTR(SELECT,DISABLED),
	HTML_ATTR(SELECT,ID),
	HTML_ATTR(SELECT,LANG),
	HTML_ATTR(SELECT,MULTIPLE),
	HTML_ATTR(SELECT,NAME),
	HTML_ATTR(SELECT,SIZE),
	HTML_ATTR(SELECT,STYLE),
	HTML_ATTR(SELECT,TABINDEX),
	HTML_ATTR(SELECT,TITLE),
	HTML_ATTRIBUTES(SELECT)
};

static HTAttr style_attr[HTML_STYLE_ATTRIBUTES+1] = {
	HTML_ATTR(STYLE,DIR),
	HTML_ATTR(STYLE,LANG),
	HTML_ATTR(STYLE,MEDIA),
	HTML_ATTR(STYLE,TITLE),
	HTML_ATTR(STYLE,TYPE),
	HTML_ATTRIBUTES(STYLE)
};

static HTAttr table_attr[HTML_TABLE_ATTRIBUTES+1] = {
	HTML_ATTR(TABLE,ALIGN),
	HTML_ATTR(TABLE,BGCOLOR),
	HTML_ATTR(TABLE,BORDER),
	HTML_ATTR(TABLE,CELLPADDING),
	HTML_ATTR(TABLE,CELLSPACING),
	HTML_ATTR(TABLE,CLASS),
	HTML_ATTR(TABLE,DIR),
	HTML_ATTR(TABLE,FRAME),
	HTML_ATTR(TABLE,ID),
	HTML_ATTR(TABLE,LANG),
	HTML_ATTR(TABLE,RULES),
	HTML_ATTR(TABLE,SUMMARY),
	HTML_ATTR(TABLE,STYLE),
	HTML_ATTR(TABLE,TITLE),
	HTML_ATTR(TABLE,WIDTH),
	HTML_ATTRIBUTES(TABLE)
};

static HTAttr tele_attr[HTML_TELE_ATTRIBUTES+1] = {
	HTML_ATTR(TELE,ALIGN),
	HTML_ATTR(TELE,CHAR),
	HTML_ATTR(TELE,CHAROFF),
	HTML_ATTR(TELE,CLASS),
	HTML_ATTR(TELE,DIR),
	HTML_ATTR(TELE,ID),
	HTML_ATTR(TELE,LANG),
	HTML_ATTR(TELE,STYLE),
	HTML_ATTR(TELE,TITLE),
	HTML_ATTR(TELE,VALIGN),
	HTML_ATTRIBUTES(TELE)
};

static HTAttr td_attr[HTML_TD_ATTRIBUTES+1] = {
	HTML_ATTR(TD,ABBR),
	HTML_ATTR(TD,ALIGN),
	HTML_ATTR(TD,AXIS),
	HTML_ATTR(TD,BGCOLOR),
	HTML_ATTR(TD,CHAR),
	HTML_ATTR(TD,CHAROFF),
	HTML_ATTR(TD,CLASS),
	HTML_ATTR(TD,COLSPAN),
	HTML_ATTR(TD,DIR),
	HTML_ATTR(TD,ID),
	HTML_ATTR(TD,HEADERS),
	HTML_ATTR(TD,HEIGHT),
	HTML_ATTR(TD,LANG),
	HTML_ATTR(TD,NOWRAP),
	HTML_ATTR(TD,ROWSPAN),
	HTML_ATTR(TD,SCOPE),
	HTML_ATTR(TD,STYLE),
	HTML_ATTR(TD,TITLE),
	HTML_ATTR(TD,VALIGN),
	HTML_ATTR(TD,WIDTH),
	HTML_ATTRIBUTES(TD)
};

static HTAttr textarea_attr[HTML_TEXTAREA_ATTRIBUTES+1] = {
	HTML_ATTR(TEXTAREA,CLASS),
	HTML_ATTR(TEXTAREA,COLS),
	HTML_ATTR(TEXTAREA,DIR),
	HTML_ATTR(TEXTAREA,DISABLED),
	HTML_ATTR(TEXTAREA,ID),
	HTML_ATTR(TEXTAREA,LANG),
	HTML_ATTR(TEXTAREA,NAME),
	HTML_ATTR(TEXTAREA,READONLY),
	HTML_ATTR(TEXTAREA,ROWS),
	HTML_ATTR(TEXTAREA,STYLE),
	HTML_ATTR(TEXTAREA,TABINDEX),
	HTML_ATTR(TEXTAREA,TITLE),
	HTML_ATTRIBUTES(TEXTAREA)
};

static HTAttr title_attr[HTML_TITLE_ATTRIBUTES+1] = {
	HTML_ATTR(TITLE,DIR),
	HTML_ATTR(TITLE,LANG),
	HTML_ATTRIBUTES(TITLE)
};

static HTAttr ul_attr[HTML_UL_ATTRIBUTES+1] = {
	HTML_ATTR(UL,CLASS),
	HTML_ATTR(UL,COMPACT),
	HTML_ATTR(UL,DIR),
	HTML_ATTR(UL,ID),
	HTML_ATTR(UL,LANG),
	HTML_ATTR(UL,STYLE),
	HTML_ATTR(UL,TITLE),
	HTML_ATTR(UL,TYPE),
	HTML_ATTRIBUTES(UL)
};

/*
 **	ELEMENTS
 **	Must match definitions in HTMLPDTD.html!
 **	Must be in alphabetical order.
 **
 **    Name,	Attributes,		content
 */
static HTTag tags[HTML_ELEMENTS] = {
	{ "A"	, a_attr,	HTML_A_ATTRIBUTES },
	{ "ABBR"    , gen_attr,     HTML_GEN_ATTRIBUTES },
	{ "ACRONYM"	, gen_attr,	HTML_GEN_ATTRIBUTES },
	{ "ADDRESS"	, gen_attr,	HTML_GEN_ATTRIBUTES },
	{ "APPLET"  , applet_attr,  HTML_APPLET_ATTRIBUTES },
	{ "AREA"	, area_attr,	HTML_AREA_ATTRIBUTES },
	{ "B"	, gen_attr,	HTML_GEN_ATTRIBUTES },
	{ "BASE"	, base_attr,	HTML_BASE_ATTRIBUTES },
	{ "BASEFONT", font_attr,	HTML_FONT_ATTRIBUTES },
	{ "BDO"     , bdo_attr,     HTML_BDO_ATTRIBUTES },
	{ "BIG"	, gen_attr,	HTML_GEN_ATTRIBUTES },
	{ "BLOCKQUOTE", bq_attr,	HTML_BQ_ATTRIBUTES },
	{ "BODY"	, body_attr,	HTML_BODY_ATTRIBUTES },
	{ "BR"	, br_attr,	HTML_BR_ATTRIBUTES },
	{ "BUTTON"	, button_attr,	HTML_BUTTON_ATTRIBUTES },
	{ "CAPTION"	, block_attr,	HTML_BLOCK_ATTRIBUTES },
	{ "CENTER"	, no_attr,	0 },
	{ "CITE"	, gen_attr,	HTML_GEN_ATTRIBUTES },
	{ "CODE"	, gen_attr,	HTML_GEN_ATTRIBUTES },
	{ "COL"	, col_attr,	HTML_COL_ATTRIBUTES },
	{ "COLGROUP", col_attr,	HTML_COL_ATTRIBUTES },
	{ "DD"	, gen_attr,	HTML_GEN_ATTRIBUTES },
	{ "DEL"	, changes_attr,	HTML_CHANGES_ATTRIBUTES },
	{ "DFN"	, gen_attr,	HTML_GEN_ATTRIBUTES },
	{ "DIR"	, gen_attr,	HTML_GEN_ATTRIBUTES },
	{ "DIV"	, block_attr,	HTML_BLOCK_ATTRIBUTES },
	{ "DL"	, gen_attr,	HTML_GEN_ATTRIBUTES },
	{ "DT"	, gen_attr,	HTML_GEN_ATTRIBUTES },
	{ "EM"	, gen_attr,	HTML_GEN_ATTRIBUTES },
	{ "FIELDSET", gen_attr,	HTML_GEN_ATTRIBUTES },
	{ "FONT"	, font_attr,	HTML_FONT_ATTRIBUTES },
	{ "FORM" 	, form_attr,	HTML_FORM_ATTRIBUTES },
	{ "FRAME"	, frame_attr,	HTML_FRAME_ATTRIBUTES },
	{ "FRAMESET", frameset_attr,HTML_FRAMESET_ATTRIBUTES },
	{ "H1"	, block_attr,	HTML_BLOCK_ATTRIBUTES },
	{ "H2"	, block_attr,	HTML_BLOCK_ATTRIBUTES },
	{ "H3"	, block_attr,	HTML_BLOCK_ATTRIBUTES },
	{ "H4"	, block_attr,	HTML_BLOCK_ATTRIBUTES },
	{ "H5"	, block_attr,	HTML_BLOCK_ATTRIBUTES },
	{ "H6"	, block_attr,	HTML_BLOCK_ATTRIBUTES },
	{ "HEAD"	, head_attr,	HTML_HEAD_ATTRIBUTES },
	{ "HR"	, hr_attr,	HTML_HR_ATTRIBUTES },
	{ "HTML"	, html_attr,	HTML_HTML_ATTRIBUTES },
	{ "I"	, gen_attr,	HTML_GEN_ATTRIBUTES },
	{ "IFRAME"	, iframe_attr,	HTML_IFRAME_ATTRIBUTES },
	{ "IMG"     , img_attr,	HTML_IMG_ATTRIBUTES },
	{ "INPUT"	, input_attr,	HTML_INPUT_ATTRIBUTES },
	{ "INS"	, changes_attr,	HTML_CHANGES_ATTRIBUTES },
	{ "ISINDEX" , isindex_attr,	HTML_ISINDEX_ATTRIBUTES },
	{ "KBD"	, gen_attr,	HTML_GEN_ATTRIBUTES },
	{ "LABEL"	, label_attr,	HTML_LABEL_ATTRIBUTES },
	{ "LEGEND"	, legend_attr,	HTML_LEGEND_ATTRIBUTES },
	{ "LI"	, li_attr,	HTML_LI_ATTRIBUTES },
	{ "LINK"	, link_attr,	HTML_LINK_ATTRIBUTES },
	{ "MAP"	, map_attr,	HTML_MAP_ATTRIBUTES },
	{ "MENU"	, gen_attr,	HTML_GEN_ATTRIBUTES },
	{ "META"	, meta_attr,	HTML_META_ATTRIBUTES },
	{ "NEXTID"  , nextid_attr,	1 },
	{ "NOFRAMES", gen_attr,	HTML_GEN_ATTRIBUTES },
	{ "NOSCRIPT", gen_attr,	HTML_GEN_ATTRIBUTES },
	{ "OBJECT"	, object_attr,	HTML_OBJECT_ATTRIBUTES },
	{ "OL"	, ol_attr,	HTML_OL_ATTRIBUTES },
	{ "OPTGROUP", optgroup_attr,HTML_OPTGROUP_ATTRIBUTES },
	{ "OPTION"	, option_attr,	HTML_OPTION_ATTRIBUTES },
	{ "P"	, block_attr,	HTML_BLOCK_ATTRIBUTES },
	{ "PARAM"	, param_attr,	HTML_PARAM_ATTRIBUTES },
	{ "PRE"	, pre_attr,	HTML_PRE_ATTRIBUTES },
	{ "Q"	, gen_attr,	HTML_GEN_ATTRIBUTES },
	{ "S"	, gen_attr,	HTML_GEN_ATTRIBUTES },
	{ "SAMP"	, gen_attr,	HTML_GEN_ATTRIBUTES },
	{ "SCRIPT"	, script_attr,	HTML_SCRIPT_ATTRIBUTES },
	{ "SELECT"	, select_attr,	HTML_SELECT_ATTRIBUTES },
	{ "SMALL"	, gen_attr,	HTML_GEN_ATTRIBUTES },
	{ "SPAN"	, block_attr,	HTML_BLOCK_ATTRIBUTES },
	{ "STRIKE"	, gen_attr,	HTML_GEN_ATTRIBUTES },
	{ "STRONG"	, gen_attr,	HTML_GEN_ATTRIBUTES },
	{ "STYLE"	, style_attr,	HTML_STYLE_ATTRIBUTES },
	{ "SUB"	, gen_attr,	HTML_GEN_ATTRIBUTES },
	{ "SUP"	, gen_attr,	HTML_GEN_ATTRIBUTES },
	{ "TABLE"	, table_attr,	HTML_TABLE_ATTRIBUTES },
	{ "TBODY"	, tele_attr,	HTML_TELE_ATTRIBUTES },
	{ "TD"	, td_attr,	HTML_TD_ATTRIBUTES },
	{ "TEXTAREA", textarea_attr,HTML_TEXTAREA_ATTRIBUTES },
	{ "TFOOT"	, tele_attr,	HTML_TELE_ATTRIBUTES },
	{ "TH"	, td_attr,	HTML_TD_ATTRIBUTES },
	{ "THEAD"	, tele_attr,	HTML_TELE_ATTRIBUTES },
	{ "TITLE"	, title_attr,	HTML_TITLE_ATTRIBUTES },
	{ "TR"	, tele_attr,	HTML_TELE_ATTRIBUTES },
	{ "TT"	, gen_attr,	HTML_GEN_ATTRIBUTES },
	{ "U"	, gen_attr,	HTML_GEN_ATTRIBUTES },
	{ "UL"	, ul_attr,	HTML_UL_ATTRIBUTES },
	{ "VAR"	, gen_attr,	HTML_GEN_ATTRIBUTES },
};

static SGML_dtd HTMLP_dtd = {
	tags,
	HTML_ELEMENTS
};

static SGML_dtd * DTD = &HTMLP_dtd;

SGML_dtd * HTML_dtd (void)
{
	return DTD;
}

}// namespace

